#include <iostream>
#include <cmath>

/*
Вы пишете программу-инсталлятор для компьютерной игры. 
Пока обновление скачивается, пользователю нужно показать прогресс загрузки, чтобы он мог решить, 
подождать ему у экрана компьютера или заварить чай.

Напишите программу, принимающую на вход размер файла обновления в мегабайтах и скорость интернет-соединения в мегабайтах 
в секунду. В каждую секунду программа показывает, сколько процентов от общего объёма обновления уже скачано, до тех пор, 
пока файл не загрузится. После установки обновления программа выводит время в секундах, которое заняло скачивание. 
Обеспечьте контроль ввода.

Пример выполнения

Ввод:

Укажите размер файла для скачивания: 123

Какова скорость вашего соединения? 27

Вывод:

Прошло 1 сек. Скачано 27 из 123 МБ (21%).

Прошло 2 сек. Скачано 54 из 123 МБ (43%).

Прошло 3 сек. Скачано 81 из 123 МБ (65%).

Прошло 4 сек. Скачано 108 из 123 МБ (87%).

Прошло 5 сек. Скачано 123 из 123 МБ (100%).

Рекомендации по выполнению
    Обратите внимание, что проценты это целые числа.

Что оценивается
    Программа работает корректно с любыми заданными значениями.
    Количество процентов не вводит в заблуждение пользователя. 
        Например, не должно выводиться 100%, если файл ещё не загрузился.
*/

int main() {
    float fileSize, downloadSpeed;
    std::cout << "Ввод: \n";
    std::cout << "Укажите размер файла для скачивания: ";
    std::cin >> fileSize;
    std::cout << "Какова скорость вашего соединения? ";
    std::cin >> downloadSpeed;

    if (fileSize < 0.0f || downloadSpeed < 0.0f) {
        std::cout << "Некорректный ввод!";
        return 0;
    }

    float fileSizeLeft = fileSize;
    float dowloadedSize = 0.0f;
    for (int i = 1; ; ++i) {
        dowloadedSize += downloadSpeed;
        dowloadedSize = (dowloadedSize >= fileSize ? fileSize : dowloadedSize);
        std::cout << "Прошло " << i << " сек. Скачано " <<  dowloadedSize
        << " из " << fileSize << " МБ (" << std::floor(dowloadedSize / fileSize * 100) << "%)\n";
        if (dowloadedSize >= fileSize) break;
    }

    return 0;
}