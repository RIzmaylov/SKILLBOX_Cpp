#include <iostream>

/*
Напишите программу, которая проверяет, можно ли первую коробку положить внутрь второй.

Условие:

В модуле вы разобрали, как написать программу для проверки, 
удастся ли поместить кирпич определённых размеров в определённое прямоугольное отверстие. 

Теперь представьте, что у вас есть две коробки. Одна размером A × B × C, а другая — M × N × K. 

Напишите программу, которая по шести данным числам A, B, C, M, N, K проверяет, 
можно ли первую коробку положить внутрь второй. 

Коробки можно как угодно переворачивать, но одна коробка должна помещаться в другую целиком. 

Советы и рекомендации
    Одна коробка в другую должна помещаться по всем трём измерениям.
    Постарайтесь сделать свою программу по возможности лаконичнее.
*/


// Беру в расчет, что при равенстве сторон одной коробки с другой, одна не может быть в другой и строго сравниваю, 
// что одна меньше другой.

int main() {
    int a, b, c, m, n, k;
    std::cout << "Введите размеры коробок: ";
    std::cin >> a >> b >> c >> m >> n >> k;

    if (a < 1 || b < 1 || c < 1 || m < 1 || n < 1 || k < 1) {
        std::cout << "Введите длину сторон больше 0!";
        return 0;
    }

    if (a > b) {
        int temp = a;
        a = b;
        b = temp;
    }
    if (b > c) {
        int temp = b;
        b = c;
        c = temp;
    }
    if (a > c) {
        int temp = a;
        a = c;
        c = temp;
    }

    if (m > n) {
        int temp = m;
        m = n;
        n = temp;
    }
    if (n > k) {
        int temp = n;
        n = k;
        k = temp;
    }
    if (m > k) {
        int temp = m;
        m = k;
        k = temp;
    }

    if (a < m && b < n && c < k || 
        m < a && n < b && k < c) std::cout << "Одна коробка поместится в другую!";
    else std::cout << "Одна коробка НЕ поместится в другую!";

    return 0;
}